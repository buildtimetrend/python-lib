{"name":"Buildtime trend","tagline":"Create trends of the duration of the stages of a build process","body":"Build stages trend example\r\n--------------------------\r\n\r\n![build stages trend](http://ruleant.github.io/buildtime-trend/buildtime-trend/trend.png)\r\n\r\nDependencies\r\n------------\r\n\r\n- lxml (python wrapper for libxml2 and libxslt)\r\n- matplotlib v1.2.0 or higher (for drawing the trend graph, stackplot is introduced in v1.2.0)\r\n\r\nInstall using pip :\r\n\r\n`pip install lxml 'matplotlib>=1.2.0'`\r\n\r\nor as a Debian package :\r\n\r\n`apt-get install python-lxml python-matplotlib`\r\n\r\nUsage\r\n-----\r\n\r\nFirst the timestamp recording needs to be initialised :\r\n\r\n`source /path/to/init.sh`\r\n\r\nThis script will detect the location of the build-trend script folder,\r\nadds it to the PATH and cleans logfiles of previous runs.\r\nExecuting the init script with `source` is required to be able to export environment variables to the current shell session.\r\n\r\nBecause the script dir is added to PATH, no path needs to be added\r\nwhen logging a timestamp :\r\n\r\n`timestamp.sh eventname`\r\n\r\nThis will log the current timestamp to a file and display it on STDOUT.\r\nRepeat this step as much as needed.\r\n\r\nWhen finished, run \r\n\r\n`analyse.sh`\r\n\r\nto analyse the logfile with timestamps and print out the results.\r\nIt will calculate the duration between the timestamps and add them to\r\na file with the analysed data of previous builds.\r\nWhen run on Travis CI, it will automatically add build/job related info.\r\n","google":"UA-49318924-1","note":"Don't delete this file! It's used internally to help with page regeneration."}